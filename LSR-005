# LSR 005 - Lamina的任意精度计算标准库

## 基本信息

- LSR 编号 005
- 标题 LSR 005 - Lamina的任意精度计算标准库
- 作者 HJimmyK
- 状态 草案
- 类型 标准规范类
- 创建日期 08-16-2025
- Lamina 版本 不适用

### 摘要


本LSR描述了Lamina为支持任意精度计算而添加的标准库，包含了对库中函数的描述。


### 技术规范 

使用32位或64位无符号数组作为基本存储结构，能够完成长整数和长定点数的计算与相关操作。使用**高效**的加法、减法、乘法、除法和乘方算法，在能够基本实现大整数的各类四则和乘方计算的基础上，能够**高效**地将大整数转换为2-36进制的任意字符串形式。不仅可以作为实现BigInt和fraction的基础库之一，还为其他衍生库的开发预留内部计算接口。

#### 简介

主要包含以下模块：

**BigInt类：**
|        操作        |                       功能                       |
| :----------------: | :----------------------------------------------: |
|        比较        |               将两个BigInt进行比较                 |
|        相加        |                 将两个BigInt相加                 |
|        相减        |                 将两个BigInt相减                 |
|        相乘        |                 将两个BigInt相乘                 |
|        相除        |                 将两个BigInt相除                 |
|        取余        |         将一个BigInt对另一个BigInt取余           |
|        移位        |             将一个BigInt进行移位                 |
| 素性检验（待敲定） |                  判断是否为素数                  |
| 随机生成（待敲定） |       可以按照特定的统计分布规律生成BigInt       |
|    转化为字符串    | 可以按照指定的进制数（2-36）将BigInt转化为字符串 |
|...|...

**函数：**
|   函数名（待定）   |  参数  |          功能          |
| :----------------: | :----: | :--------------------: |
|       floor        | BigInt |      向负无穷取整      |
|        ceil        | BigInt |      向正无穷取整      |
|       round        | BigInt | 四舍五入至任意指定精度 |
|        abs         | BigInt |        取绝对值        |
| is_prime（待敲定） | BigInt |     判断是否为素数     |
|...|...|...

**内置类：**
**__Int128 和 __UInt128:**
|        操作        |                       功能                       |
| :----------------: | :----------------------------------------------: |
|        比较        |               将两个128位数进行比较                 |
|        相加        |                 将两个128位数相加                 |
|        相减        |                 将两个128位数相减                 |
|        相乘        |                 将两个128位数相乘                 |
|        相除        |                 将两个128位数相除                 |
|        取余        |         将一个128位数对另一个128位数取余           |
|        移位        |             将一个128位数进行移位                 |
| 按位逻辑操作        |       将两个128位数进行按位逻辑操作                 |
| 素性检验（待敲定） |                  判断是否为素数                  |
| 随机生成（待敲定） |       可以按照特定的统计分布规律生成128位数       |
|    转化为字符串    | 可以按照指定的进制数（2-36）将128位数转化为字符串 |
|...|...

**__Int192 和 __UInt192:**
和128位基本一致

**内置函数：**
|        函数名(待定)        |  参数  |          功能          |
| :----------------: | :----: | :--------------------: |
|       __floor        | 128/192位数 |      向负无穷取整      |
|        __ceil        | 128/192位数 |      向正无穷取整      |
|       __round        | 128/192位数 | 四舍五入至任意指定精度 |
|        __abs         | 128/192位数 |        取绝对值        |
| __is_prime（待敲定） | 128/192位数 |     判断是否为素数     |
| __to_string | 128/192位数 |     转化为字符串     |
|...|...|...
### 基本原理 

1. 分治乘法算法：卡拉楚巴算法、Toom算法
2. kunth除法算法、分治除法算法、牛顿除法算法
3. 分治进制转换
4. 快速幂算法
5. 米勒拉宾素性检测

### 参考实现 

- [GMP](https://gmplib.org/)
- [Easy-BigInteger](https://github.com/Twilight-Dream-Of-Magic/Easy-BigInteger)
- [ilmp](https://github.com/himisawww/ilmp)


